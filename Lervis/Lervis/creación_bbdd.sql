-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categoria
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    categoria text COLLATE pg_catalog."default" NOT NULL,
    codigo_categoria text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categoria_pkey PRIMARY KEY (id),
    CONSTRAINT categoria_codigo_categoria_key UNIQUE (codigo_categoria)
);

CREATE TABLE IF NOT EXISTS public.embeddings_chunks
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_publicaciones bigint NOT NULL,
    chunk text COLLATE pg_catalog."default" NOT NULL,
    chunk_emb_dense vector NOT NULL,
    chunk_emb_sparse hstore NOT NULL,
    CONSTRAINT embeddings_chunks_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.embeddings_resumen
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_publicaciones bigint NOT NULL,
    resumen text COLLATE pg_catalog."default" NOT NULL,
    resumen_emb_dense vector NOT NULL,
    resumen_emb_sparse hstore NOT NULL,
    CONSTRAINT embeddings_resumen_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.flask_sessions
(
    id serial NOT NULL,
    session_id character varying(255) COLLATE pg_catalog."default",
    data bytea,
    expiry timestamp without time zone,
    CONSTRAINT flask_sessions_pkey PRIMARY KEY (id),
    CONSTRAINT flask_sessions_session_id_key UNIQUE (session_id)
);

CREATE TABLE IF NOT EXISTS public.publicaciones
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    titulo text COLLATE pg_catalog."default" NOT NULL,
    autores text COLLATE pg_catalog."default" NOT NULL,
    fecha_publicacion date NOT NULL,
    categoria_principal bigint NOT NULL,
    categorias_lista text COLLATE pg_catalog."default" NOT NULL,
    url_pdf text COLLATE pg_catalog."default" NOT NULL,
    identificador_arxiv text COLLATE pg_catalog."default" NOT NULL,
    documento_completo text COLLATE pg_catalog."default",
    anio integer GENERATED ALWAYS AS ((EXTRACT(year FROM fecha_publicacion))::integer) STORED,
    mes integer GENERATED ALWAYS AS ((EXTRACT(month FROM fecha_publicacion))::integer) STORED,
    dia integer GENERATED ALWAYS AS ((EXTRACT(day FROM fecha_publicacion))::integer) STORED,
    CONSTRAINT publicaciones_pkey PRIMARY KEY (id),
    CONSTRAINT publicaciones_identificador_arxiv_key UNIQUE (identificador_arxiv)
);

ALTER TABLE IF EXISTS public.embeddings_chunks
    ADD CONSTRAINT fk_id_publicaciones FOREIGN KEY (id_publicaciones)
    REFERENCES public.publicaciones (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.embeddings_resumen
    ADD CONSTRAINT fk_id_publicaciones FOREIGN KEY (id_publicaciones)
    REFERENCES public.publicaciones (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.publicaciones
    ADD CONSTRAINT fk_categoria_principal FOREIGN KEY (categoria_principal)
    REFERENCES public.categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;